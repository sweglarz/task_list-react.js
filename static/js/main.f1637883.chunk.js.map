{"version":3,"sources":["Buttons/index.js","Container/index.js","Form/index.js","Header/index.js","Section/index.js","Tasks/index.js","App.js","reportWebVitals.js","index.js"],"names":["Buttons","tasks","hideDone","toggleHideDone","setAllDone","className","length","onClick","some","done","disabled","every","Container","children","Form","addNewTask","useState","newTaskContent","setNewTaskContent","onSubmit","event","preventDefault","trim","value","type","placeholder","onChange","target","Header","title","Section","extraHeaderContent","body","Tasks","removeTask","toggleTaskDone","map","task","id","content","App","setHideDone","JSON","parse","localStorage","getItem","setTasks","useEffect","setItem","stringify","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f1637883.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Buttons = ({ tasks, hideDone, toggleHideDone, setAllDone }) => (\r\n    <div className=\"buttons\">\r\n        {tasks.length > 0 && (\r\n            <>\r\n                <button\r\n                    onClick={toggleHideDone}\r\n                    className=\"buttons__button\"\r\n                >\r\n                    {tasks.some(({ done }) => done) && hideDone ? \"Poka≈º\" : \"Ukryj\"} uko≈Ñczone\r\n                </button>\r\n\r\n                <button\r\n                    onClick={setAllDone}\r\n                    className=\"buttons__button\"\r\n                    disabled={tasks.every(({ done }) => done)}\r\n                >\r\n                    Uko≈Ñcz wszystkie\r\n                </button>\r\n            </>\r\n        )}\r\n    </div>\r\n);\r\n\r\n\r\nexport default Buttons;","import \"./style.css\"; \r\n\r\nconst Container = ({children}) => (\r\n    <main className =\"main\">\r\n        {children}\r\n    </main>\r\n);\r\n\r\nexport default Container","import { useState } from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Form = ({ addNewTask }) => {\r\n  const [newTaskContent, setNewTaskContent] = useState(\"\")\r\n  const onFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    addNewTask(newTaskContent.trim());\r\n    setNewTaskContent(\"\");\r\n  };\r\n\r\n  return (\r\n    <form className=\"form\" onSubmit={onFormSubmit}>\r\n      <label className=\"form__label\">\r\n        <input\r\n          value={newTaskContent}\r\n          className=\"form__input\"\r\n          type=\"text\"\r\n          placeholder=\"Co jest do zrobienia?\"\r\n          onChange={({ target }) => setNewTaskContent(target.value)}\r\n        />\r\n        <button className=\"form__button\">Dodaj zadanie</button>\r\n      </label>\r\n    </form>\r\n  )\r\n};\r\n\r\nexport default Form;","import \"./style.css\";\r\n\r\nconst Header = ({title}) => (\r\n    <h1 className=\"main__header\">{title}</h1>\r\n)\r\n\r\nexport default Header; ","import \"./style.css\";\r\n\r\nconst Section = ({ title, extraHeaderContent, body }) => (\r\n    <section className=\"section\">\r\n        <div className=\"section__headerBox\">\r\n            <h2 className=\"section__header section__header--borderless\">{title}</h2>\r\n            {extraHeaderContent}\r\n        </div>\r\n        {body}\r\n    </section>\r\n)\r\n\r\nexport default Section;","import \"./style.css\";\r\n\r\nconst Tasks = ({ tasks, hideDone, removeTask, toggleTaskDone}) => (\r\n    <ul className=\"tasks__list\">\r\n        {tasks.map(task => (\r\n            <li\r\n                key={task.id}\r\n                className={`tasks__item ${task.done && hideDone ? \"tasks__item--hidden\" : \"\"}`}\r\n            >\r\n                <button\r\n                    onClick={() => toggleTaskDone(task.id)}\r\n                    className=\"tasks__button tasks__button--done\">\r\n                    {task.done ? \"‚úî\" : \"\"}\r\n                </button>\r\n\r\n                <span className={`tasks__span\r\n            ${task.done ? \"tasks__span--done\" : \"\"}`}>{task.content}</span>\r\n                <button\r\n                    onClick={() => removeTask(task.id)}\r\n                    className={`tasks__button tasks__button--remove`}\r\n                >üóëÔ∏è</button>\r\n            </li>\r\n        ))}\r\n    </ul>\r\n);\r\n\r\nexport default Tasks;","import { useEffect, useState } from \"react\"\nimport Buttons from \"./Buttons\";\nimport Container from \"./Container\";\nimport Form from \"./Form\";\nimport Header from \"./Header\";\nimport Section from \"./Section\";\nimport Tasks from \"./Tasks\";\n\nfunction App() {\n  const [hideDone, setHideDone] = useState(false);\n  const [tasks, setTasks] = useState(JSON.parse(localStorage.getItem(\"tasks\")) || []);\n\n  useEffect(() => {\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n  }, [tasks]);\n\n  const toggleHideDone = () => {\n    setHideDone(hideDone => !hideDone)\n  };\n\n  const removeTask = (id) => {\n    setTasks(tasks => tasks.filter(task => task.id !== id))\n  };\n\n  const toggleTaskDone = (id) => {\n    setTasks(tasks => tasks.map(task => {\n      if (task.id === id) {\n        return {\n          ...task, done: !task.done\n        }\n      } return task;\n    }));\n  };\n\n  const setAllDone = () => {\n    setTasks(tasks => tasks.map(task => ({\n      ...task,\n      done: true,\n    })));\n  };\n\n  const addNewTask = (content) => {\n    if (content !== \"\") {\n      setTasks(tasks => [\n        ...tasks,\n        {\n          content,\n          done: false,\n          id: tasks.length ? tasks[tasks.length - 1].id + 1 : 1,\n        },\n      ]);\n    } return;\n  };\n\n  return (\n    <div className=\"App\">\n      <Container>\n        <Header\n          title=\"Lista zada≈Ñ\"\n        />\n        <Section\n          title=\"Dodaj nowe zadanie\"\n          body={<Form addNewTask={addNewTask} />}\n        />\n        <Section\n          title=\"Lista zada≈Ñ\"\n          body={\n            <Tasks\n              tasks={tasks}\n              hideDone={hideDone}\n              removeTask={removeTask}\n              toggleTaskDone={toggleTaskDone} />}\n          extraHeaderContent={\n            <Buttons tasks={tasks}\n              hideDone={hideDone}\n              toggleHideDone={toggleHideDone}\n              setAllDone={setAllDone} />}\n        />\n      </Container>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
{"version":3,"sources":["globalStyles.js","Buttons/styled.js","Buttons/index.js","Container/styled.js","Container/index.js","Form/styled.js","Form/index.js","Header/styled.js","Header/index.js","Section/styled.js","Section/index.js","Tasks/styled.js","Tasks/index.js","App.js","useTasks.js","reportWebVitals.js","index.js"],"names":["GlobalStyle","createGlobalStyle","BoxOfButtons","styled","div","Button","button","Buttons","tasks","hideDone","toggleHideDone","setAllDone","length","onClick","some","done","disabled","every","Main","main","Container","children","FormElement","form","FormLabel","label","FormInput","input","FormButton","Form","addNewTask","useState","newTaskContent","setNewTaskContent","inputRef","useRef","onSubmit","event","preventDefault","trim","current","focus","ref","value","className","type","placeholder","onChange","target","Title","h1","Header","title","SectionElement","section","HeaderBox","SectionHeader","h2","BorderlessHeader","Section","extraHeaderContent","body","List","ul","Item","li","hidden","css","TaskContent","span","toggleDone","remove","Tasks","removeTask","toggleTaskDone","map","task","id","content","App","setHideDone","JSON","parse","localStorage","getItem","setTasks","useEffect","setItem","stringify","filter","useTasks","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.67bf96d5.chunk.js","sourcesContent":["import {createGlobalStyle} from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n    html {\r\n    box-sizing: border-box;\r\n    }\r\n\r\n    *, ::after, ::before {\r\n    box-sizing: inherit;\r\n    }\r\n\r\n    body {\r\n    font-family: 'Montserrat', sans-serif;\r\n    background-color: #eee;\r\n    }\r\n`","import styled from \"styled-components\";\r\n\r\nexport const BoxOfButtons = styled.div`\r\n    padding: 10px;\r\n    line-height: 1.5;\r\n    \r\n    @media(max-width: 500px){\r\n        display: flex;\r\n        flex-direction: column;\r\n        text-align: center;\r\n    }\r\n`\r\n\r\nexport const Button = styled.button`\r\n    background-color: transparent;\r\n    font-family: 'Montserrat', sans-serif;\r\n    border: none;\r\n    color: teal;\r\n    font-size: 16px;\r\n    padding: 0;\r\n    margin: 0 0 0 20px;\r\n    cursor: pointer;\r\n    transition: color 0.3s;\r\n\r\n    &:hover{\r\n        color: rgb(1, 160, 160);\r\n    }\r\n    &:active{\r\n        color: rgb(0, 196, 196);\r\n    }\r\n    &:disabled{\r\n        color: #ccc;\r\n        cursor: inherit;\r\n    }\r\n    @media(max-width: 500px){\r\n        margin: 10px 0;\r\n    }\r\n`","import React from \"react\";\r\nimport { BoxOfButtons, Button } from \"./styled\";\r\n\r\nconst Buttons = ({ tasks, hideDone, toggleHideDone, setAllDone }) => (\r\n    <BoxOfButtons>\r\n        {tasks.length > 0 && (\r\n            <>\r\n                <Button\r\n                    onClick={toggleHideDone}\r\n                >\r\n                    {tasks.some(({ done }) => done) && hideDone ? \"Pokaż\" : \"Ukryj\"} ukończone\r\n                </Button>\r\n\r\n                <Button\r\n                    onClick={setAllDone}\r\n                    disabled={tasks.every(({ done }) => done)}\r\n                >\r\n                    Ukończ wszystkie\r\n                </Button>\r\n            </>\r\n        )}\r\n    </BoxOfButtons>\r\n);\r\n\r\n\r\nexport default Buttons;","import styled from \"styled-components\";\r\n\r\nexport const Main = styled.main`\r\n    max-width: 900px;\r\n    margin: 100px auto;\r\n    padding: 10px;\r\n`","import { Main } from \"./styled\";\r\n\r\nconst Container = ({children}) => (\r\n    <Main>\r\n        {children}\r\n    </Main>\r\n);\r\n\r\nexport default Container","import styled from \"styled-components\";\r\n\r\nexport const FormElement = styled.form`\r\n    padding: 10px 0;\r\n`\r\n\r\nexport const FormLabel = styled.label`\r\n    display: flex;\r\n    justify-content: space-between;\r\n\r\n    @media (max-width: 500px) {\r\n        flex-wrap: wrap;\r\n    }\r\n`\r\n\r\nexport const FormInput = styled.input`\r\n    padding: 10px;\r\n    margin: 10px;\r\n    flex-grow: 1;\r\n    font-size: 16px;\r\n    border: 2px solid #eee;\r\n`\r\nexport const FormButton = styled.button`\r\n    padding: 10px;\r\n    margin: 10px;\r\n    background-color: teal;\r\n    color: #fff;\r\n    border: none;\r\n    font-size: 16px;\r\n    cursor: pointer;\r\n    transition: 0.3s;\r\n\r\n    &:hover{\r\n        background-color: rgb(1, 141, 141);\r\n        transform: scale(1.1);\r\n    }\r\n    &:active{\r\n        background-color: rgb(3, 170, 170); \r\n    }\r\n    @media (max-width: 500px) {\r\n        flex-basis: 100%;\r\n    }\r\n`","import { useState, useRef } from \"react\";\r\nimport { FormElement, FormLabel, FormInput, FormButton } from \"./styled\";\r\n\r\nconst Form = ({ addNewTask }) => {\r\n  const [newTaskContent, setNewTaskContent] = useState(\"\");\r\n  const inputRef = useRef(null);\r\n\r\n  const focusInput = () => {\r\n    inputRef.current.focus();\r\n  }\r\n  \r\n  const onFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    addNewTask(newTaskContent.trim());\r\n    setNewTaskContent(\"\");\r\n    focusInput()\r\n  };\r\n\r\n  return (\r\n    <FormElement onSubmit={onFormSubmit}>\r\n      <FormLabel>\r\n        <FormInput\r\n          ref={inputRef}\r\n          value={newTaskContent}\r\n          className=\"form__input\"\r\n          type=\"text\"\r\n          placeholder=\"Co jest do zrobienia?\"\r\n          onChange={({ target }) => setNewTaskContent(target.value)}\r\n        />\r\n        <FormButton>Dodaj zadanie</FormButton>\r\n      </FormLabel>\r\n    </FormElement>\r\n  )\r\n};\r\n\r\nexport default Form;","import styled from \"styled-components\";\r\n\r\nexport const Title = styled.h1`\r\n    margin: 10px 10px 20px;\r\n`","import { Title } from \"./styled\";\r\n\r\nconst Header = ({title}) => (\r\n    <Title>{title}</Title>\r\n)\r\n\r\nexport default Header; ","import styled from \"styled-components\";\r\n\r\nexport const SectionElement = styled.section`\r\n    background-color: #fff;\r\n    padding: 5px 0;\r\n    margin: 10px;\r\n`\r\n\r\nexport const HeaderBox = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: space-between;\r\n    border-bottom: 2px solid #eee;\r\n    \r\n    @media(max-width: 500px){\r\n        display: flex;\r\n        flex-direction: column;\r\n    }\r\n`\r\n\r\nexport const SectionHeader = styled.h2`\r\n    margin: 0px;\r\n    padding: 10px;\r\n    border-bottom: 2px solid #eee;\r\n    font-size: 20px;\r\n`\r\n\r\nexport const BorderlessHeader = styled(SectionHeader)`\r\n    border-bottom: none;\r\n`","import { SectionElement, HeaderBox, SectionHeader, BorderlessHeader } from \"./styled\";\r\n\r\nconst Section = ({ title, extraHeaderContent, body }) => (\r\n    <SectionElement>\r\n        <HeaderBox>\r\n            <BorderlessHeader>{title}</BorderlessHeader>\r\n            {extraHeaderContent}\r\n        </HeaderBox>\r\n        {body}\r\n    </SectionElement>\r\n)\r\n\r\nexport default Section;","import styled, { css } from \"styled-components\";\r\n\r\nexport const List = styled.ul`\r\n    list-style: none;\r\n    padding: 0;\r\n    text-align: left;\r\n`\r\nexport const Item = styled.li`\r\n    padding: 10px 0;\r\n    border-bottom: 2px solid #eee;\r\n    margin: 25px 15px 0 15px;\r\n    display: grid;\r\n    grid-template-columns: auto 1fr auto;\r\n    align-items: center;\r\n\r\n    ${({ hidden }) => hidden && css`\r\n        display: none;    \r\n    `}\r\n`\r\nexport const TaskContent = styled.span`\r\n    line-height: 1.8;\r\n    word-break: break-all;\r\n\r\n    ${({ done }) => done && css`\r\n        text-decoration: line-through;\r\n    `}\r\n`\r\nexport const Button = styled.button`\r\n    margin: 0 10px;\r\n    border: none;\r\n    width: 30px;\r\n    height: 30px;\r\n    padding: 5px;\r\n    cursor: pointer;\r\n    transition: background-color 0.3s;\r\n\r\n    ${({ toggleDone }) => toggleDone && css`\r\n        background-color: #008000;\r\n        color: #fff;\r\n\r\n        &:hover{\r\n            background-color: rgb(0, 138, 0);\r\n        }\r\n        &:active{\r\n            background-color: rgb(3, 158, 3);\r\n        }\r\n    `}\r\n\r\n    ${({ remove }) => remove && css`\r\n        background-color: #ff0000;\r\n        color: #fff;\r\n\r\n        &:hover{\r\n            background-color: rgb(255, 52, 52);\r\n        }\r\n        &:active{\r\n            background-color: rgb(255, 72, 72);\r\n        }\r\n    `}\r\n`","import { List, Item, TaskContent, Button } from \"./styled\";\r\n\r\nconst Tasks = ({ tasks, hideDone, removeTask, toggleTaskDone }) => (\r\n    <List>\r\n        {tasks.map(task => (\r\n            <Item\r\n                key={task.id}\r\n                hidden={task.done && hideDone}\r\n            >\r\n                <Button\r\n                    onClick={() => toggleTaskDone(task.id)}\r\n                    toggleDone\r\n                >\r\n                    {task.done ? \"✔\" : \"\"}\r\n                </Button>\r\n\r\n                <TaskContent\r\n                    done={task.done}\r\n                >\r\n                    {task.content}\r\n                </TaskContent>\r\n                <Button\r\n                    onClick={() => removeTask(task.id)}\r\n                    remove\r\n                >\r\n                    🗑️\r\n                </Button>\r\n            </Item>\r\n        ))}\r\n    </List>\r\n);\r\n\r\nexport default Tasks;","import { useState } from \"react\"\nimport Buttons from \"./Buttons\";\nimport Container from \"./Container\";\nimport Form from \"./Form\";\nimport Header from \"./Header\";\nimport Section from \"./Section\";\nimport Tasks from \"./Tasks\";\nimport { useTasks } from \"./useTasks\";\n\nfunction App() {\n  const [hideDone, setHideDone] = useState(false);\n  \n  const toggleHideDone = () => {\n    setHideDone(hideDone => !hideDone)\n  };\n\n  const {\n    tasks,\n    removeTask,\n    toggleTaskDone,\n    setAllDone,\n    addNewTask\n  } = useTasks();\n\n  return (\n    <div className=\"App\">\n      <Container>\n        <Header\n          title=\"Lista zadań\"\n        />\n        <Section\n          title=\"Dodaj nowe zadanie\"\n          body={<Form addNewTask={addNewTask} />}\n        />\n        <Section\n          title=\"Lista zadań\"\n          body={\n            <Tasks\n              tasks={tasks}\n              hideDone={hideDone}\n              removeTask={removeTask}\n              toggleTaskDone={toggleTaskDone} />}\n          extraHeaderContent={\n            <Buttons tasks={tasks}\n              hideDone={hideDone}\n              toggleHideDone={toggleHideDone}\n              setAllDone={setAllDone} />}\n        />\n      </Container>\n    </div>\n  );\n};\n\nexport default App;\n","import { useState, useEffect } from \"react\";\r\n\r\nexport const useTasks = () => {\r\n\r\n    const getSavedTasks = () => JSON.parse(localStorage.getItem(\"tasks\")) || [];\r\n    const [tasks, setTasks] = useState(getSavedTasks);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"tasks\", JSON.stringify(tasks));\r\n    }, [tasks]);\r\n    \r\n\r\n    const removeTask = (id) => {\r\n        setTasks(tasks => tasks.filter(task => task.id !== id))\r\n    };\r\n\r\n    const toggleTaskDone = (id) => {\r\n        setTasks(tasks => tasks.map(task => {\r\n            if (task.id === id) {\r\n                return {\r\n                    ...task, done: !task.done\r\n                }\r\n            } return task;\r\n        }));\r\n    };\r\n\r\n    const setAllDone = () => {\r\n        setTasks(tasks => tasks.map(task => ({\r\n            ...task,\r\n            done: true,\r\n        })));\r\n    };\r\n\r\n    const addNewTask = (content) => {\r\n        if (content !== \"\") {\r\n            setTasks(tasks => [\r\n                ...tasks,\r\n                {\r\n                    content,\r\n                    done: false,\r\n                    id: tasks.length ? tasks[tasks.length - 1].id + 1 : 1,\r\n                },\r\n            ]);\r\n        } return;\r\n    };\r\n    return {tasks, removeTask, toggleTaskDone, setAllDone, addNewTask}\r\n}; ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GlobalStyle } from \"./globalStyles\";\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <>\n    <GlobalStyle/>\n    </>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}